@mixin textStyles(
    $fw: null, 
    $fs: null, 
    $lh: null, 
    $c: null, 
    $ls: null) 
    {
        @if $fw != null {
            font-weight: $fw;
        } 
    
        @if $fs != null {
            font-size: $fs;
        } 
    
        @if $lh != null {
            line-height: $lh;
        } 
    
        @if $c != null {
            color: $c;
        } 

        @if $ls != null { 
            letter-spacing: $ls;
        } 
        
}


@mixin inputStyles(
    $backgroundColor: transparent, 
    $border: none, 
    $borderRadius: 0, 
    $padding: 0) 
    {
        background-color: $backgroundColor;
        border: $border;
        border-radius: $borderRadius;
        padding: $padding;
}

@mixin borderRad(
    $tl: null, 
    $tr: null, 
    $br: null, 
    $bl: null) 
    {
    @if $tl != null {
        border-top-left-radius: $tl;
    } 

    @if $tr != null {
        border-top-right-radius: $tr;
    } 

    @if $br != null {
        border-bottom-right-radius: $br;
    } 

    @if $bl != null{
        border-bottom-left-radius: $bl;
    } 
}

@mixin border(
    $bt: null, 
    $br: null, 
    $bb: null, 
    $bl: null) 
    {
    @if $bt != null {
        border-top: $bt;
    } 

    @if $br != null {
        border-right: $br;
    } 

    @if $bb != null {
        border-bottom: $bb;
    } 

    @if $bl != null{
        border-left: $bl;
    } 
}

@mixin dimensions(
    $w: null, 
    $h: null, 
    $minw: null, 
    $maxw: null, 
    $minh: null, 
    $maxh: null) 
    {
        @if $w != null {
            width: $w;
        } 
    
        @if $h != null {
            height: $h;
        } 
    
        @if $minw != null {
            min-width: $minw;
        } 
    
        @if $maxw != null{
            max-width: $maxw;
        } 

        @if $minh != null{
            min-height: $minh;
        } 

        @if $maxh != null{
            max-height: $maxh;
        } 
}

@mixin flexCentered {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin inputsCommon {
    &.filled {
        > p {
            border:var(--ac-border-width-1) solid var(--ac-color-gray-300);
        }

        > input {
            border:var(--ac-border-width-1) solid var(--ac-color-gray-300);
        }
    }

    &.error {
        > input {
            padding-right: var(--ac-space-14);
            border:var(--ac-border-width-1) solid var(--ac-color-error-light);
        }

        & > i {
            position: absolute;
            right: 3%;
            top: calc(50% - (var(--ac-font-size-7) / 2));
            font-size: var(--ac-font-size-7);
        }
    
        & > i[class*="exclamation"] {
            color: var(--ac-color-error-main);
        }
    }

    &.disabled {
        input {
            background-color: var(--ac-color-gray-50);
            color:var(--ac-color-text-light-gray) !important;
        }

        ::placeholder {
            color:var(--ac-color-text-light-gray) !important;
        }
    }
}

@mixin t-buttonsCommon {
    border-radius: var(--ac-border-radius-4);
    font-weight: var(--ac-font-weight-4);
    width: fit-content;
    transition: var(--ac-transition-md) background-color;
    display: flex;
    align-items: center;
}

@mixin t-primaryButtonsCommon {
    border: none;
    box-shadow: var(--ac-shadow-xs);
    background-color: var(--ac-color-primary-main);
    color: var(--ac-color-base-white);

    &:hover {
        background-color: var(--ac-color-primary-700);
    }

    &.disabled {
        background-color: var(--ac-color-primary-300);

        &:hover {
            background-color: var(--ac-color-primary-300);
        }
    }
}

@mixin t-secondaryButtonsCommon {
    background-color: transparent;
    border: var(--ac-border-width-1) solid var(--ac-color-primary-main);
    color: var(--ac-color-primary-main);

    &:hover {
        background-color: var(--ac-color-primary-50);
    }

    &.disabled {
        background-color: transparent;
        border: var(--ac-border-width-1) solid var(--ac-color-primary-200);
        color: var(--ac-color-primary-200);

        &:hover {
            background-color: transparent;
        }
    }
}

@mixin t-tertiaryButtonsCommon {
    background-color: var(--ac-color-gray-main);
    border: 1px solid transparent;
    color: var(--ac-color-text-dark);

    &:hover {
        background-color: var(--ac-color-gray-bg);
        border: var(--ac-border-width-1) solid var(--ac-color-border);
    }

    &.disabled {
        background-color: transparent;
        border: var(--ac-border-width-1) solid var(--ac-color-border);
        color: var(--ac-color-text-light-gray);

        &:hover {
            background-color: transparent;
        }
    }
}
